//
//  Hydrogen Lithography MATE Project


// - Pattern_Writer_v2.1.MATE
//
//  03.Feb.2021
//  v2.1
//  - sets 'next_coordinate' to path first position. removes large movement of tip at start of write.
//

//  - Pattern_Writer_v2.0.MATE
//
//  10.Feb.2019 - Procopios Constantinou
//  v2.0
//  - Added 'path_dwell_time', a variable that introduces a dwell time between writing each pre-defined path.
//  - Added 'idle_scanspeed', a variable that allows the user to define the scan-speed during idle tip movements (when not writing).
//
//  17.Dec.2009 - Philipp Studer
//  v1.0
//
//
/*
 ----------------
-------- ABSTRACT
This is a general MATE script that will write a pre-determined vector path whilst applying a constant gap-voltage, current set-point and scan-speed. This can be used for controlled patterning of hydrogen terminated silicon surfaces. Three points of a quadrilateral shape are defined, within which the pattern shall be written inside.
Order;         Top-left, Bottom-left, Bottom-right.
Experiment;    STM_AtomManipulation.
----------------------------------------
-------- STRUCTURE OF THE PATTERN MATRIX
path[][][] is a three dimensional array where each row contains a path that shall be traced by the tip in writing mode. Each path consists an array of coorinates (x and y). The number of points per path has to be stored in points[]. The coordinate system origin has to be the top left and the coordinates shall be from 0 to 1 in x and y direction (relative coordinates to selected area!)
points[] contains the number of points the corresponding path has.
nrpaths contains the total of independent paths that are written.
-------------------
-------- HOW TO USE
 (1)    Open exeriment and upload it to the Matrix CU.
 (2)    Use menu item 'Tools < Manage Scrits...' to open the Script Manager.
 (3)    Load the script, select the experiment to be used in the side bar of the script manager and associate the script with the experiment.
 (4)    Build the executable version of the script.
 (5)    Use the 'gearbox' control in the Project window to launch the script.
 (6)    Select the 'tip relocation mouse tool' of an image window.
 (7)    Click on the sample locations to define the box where to place the pattern; top-left, bottom-left, bottom-right.
*/

/*------------------------------------------------------------------------------------
 -------- INITIALISING SCRIPT VARIABLES */
// Defining the hydrogen lithography writing parameters
var path_dwell_time         = 1;           // Dwell Time between writing each path [s]
var write_gap_voltage       = 6;         // Writing Voltage [Volts] FEM 6-8 V, APM 3-4 V
var write_current_setpoint  = 1500.e-12;   // Writing Current [Ampere] FEM 0.75-1.5 nA, APM 3-4.5 nA
var write_scanspeed         = 50;          // Writing Scan Speed [nm/s] 25 - 400 nm/s
var idle_scanspeed          = 350;         // Idle Scan Speed whilst not writing [nm/s]
var data_acquisition        = false;       // Change this if you want to monitor signals
// Define the script constants
var frame_points            = 3;
// Define path variables for the tip writing
var path;
var points;
var nrpaths;
// Define script variables
var picked_points;
var picked_coordinates;
var next_coordinate;
var idle_gap_voltage, idle_current_setpoint, idle_rastertime;
var init_rastertime;
var vector_xtemp;
var vector_ytemp;
var vector_xnext;
var vector_ynext;
var angle;
var patternwidth;
var patternheight;
var writing;
var pointcount;
var pathcount;
var write_rastertime;
var test;

/*------------------------------------------------------------------------------------
 -------- ENTITY OBSERVERS */

// Entity observer to intercept the signal from the 'mouse tool', which it sends to the XYScanner instance. Once three clicks are registered, it extracts the current scanning parameters and proceeds to move tip to its new location.
function XYScanner.XY_Position_Trigger ()
{
    picked_coordinates[picked_points++] = XYScanner.Target_Position;
    // Fool the 'mouse tool': Triggering the 'XY_Position_Reached' parameter will cause the tool to unlock itself so that it accepts the next selection.
    trigger(XYScanner.XY_Position_Reached);
    // Once three clicks are registered, it proceeds with the writing
    if (picked_points == frame_points )
    {
        // Initialising XYScanner objects
        XYScanner.Store_Current_Position = true;                // Allows to return to the current position after the write by calling resume()
        XYScanner.Use_Aux_Settings = false;                     // No data acquisition while writing
        XYScanner.Return_To_Stored_Position = false;            // Do not return to stored position right now
        XYScanner.Trigger_Execute_At_Target_Position = false;   // No triggering of execute needed when position reached
        // Extracting the initial speed of the scanning
        init_rastertime = XYScanner.Raster_Time;
        // Extracting the initial parameters to use in the idle state of moving and not writing
        idle_gap_voltage = GapVoltageControl.Voltage;
        idle_current_setpoint = Regulator.Setpoint_1;
        idle_rastertime = (XYScanner.Width/XYScanner.Points);
        idle_rastertime = idle_rastertime/(idle_scanspeed*1e-9);
        // Extracting the initial parameters to use in the writing state
        write_rastertime = XYScanner.Width/XYScanner.Points;
        write_rastertime = write_rastertime/(write_scanspeed*1e-9);
        // Extracting temporary y-position
        vector_ytemp = picked_coordinates[0][1] - picked_coordinates[1][1];
        patternheight = vector_ytemp;
        if(patternheight<0)
            patternheight = -patternheight;
        // Extracting temporary x-position
        vector_xtemp = picked_coordinates[2][0] - picked_coordinates[1][0];
        patternwidth =  vector_xtemp;
        if(patternwidth < 0)
            patternwidth = - patternwidth;
		
              // Extracting the vector positions [x,y] for the very first tip write position [0][0]
        vector_xtemp = picked_coordinates[0][0] + patternwidth * path[0][0][0];
        vector_ytemp = picked_coordinates[0][1] - patternheight *  path[0][0][1];
        next_coordinate = [vector_xtemp, vector_ytemp];
        
		relocate();                                 // Move to first the position
        XYScanner.Store_Current_Position = false;   // The first position is saved, don`t overwrite with positions along the path
    }
}

// Entity observer to intercept the CU's events emitted each time the probe has arrived at its destination. This is the primary entity observer that controls the motion of the tip over all the writing path vectors.
function XYScanner.XY_Position_Reached ()
{
    // For the very first point in the writing path
    if(pointcount == 0)
    {
        writing = 0;                    // default to no writing
        writingcondition(writing);      // set tip parameters to idle state
        // Extracting the vector positions [x,y] for the very first tip position
        vector_xtemp = picked_coordinates[0][0] + patternwidth * path[pathcount][pointcount][0];
        vector_ytemp = picked_coordinates[0][1] - patternheight *  path[pathcount][pointcount][1];
        next_coordinate = [vector_xtemp, vector_ytemp];
        pointcount++;                   // add one unit to the point count
        relocate();                     // relocate the tip to its first position
        // Add a dwell-time once the first co-ordinate of the path is reached
        sleep(path_dwell_time*1000);    // convert s into ms for the sleep() function
        
    }
    // For all other points in the writing path
    else
    {
        // - If the pointcount is less than the total number of points in the path, keep writing
        if(pointcount < points[pathcount])
        {
            // Switch from idle -> writing mode
            if (writing == 0)
            {
                writing = 1;                    // switch on writing mode
                writingcondition(writing);      // set tip parameters to writing state
            }
            // Extracting the vector positions [x,y] for the next writing point
            vector_xtemp = picked_coordinates[0][0] + patternwidth * path[pathcount][pointcount][0];
            vector_ytemp = picked_coordinates[0][1] - patternheight *  path[pathcount][pointcount][1];
            next_coordinate = [vector_xtemp , vector_ytemp];
            pointcount++;               // add one unit to the point count
            relocate();                 // relocate the tip to its first position
        }
        // - If the path has finished writing, stop writing and move to the next path to start writing again
        else
        {
            pathcount+=1;                   // add one unit to the path count
            // -- If the pathcount is less than the total number of paths, stop writing and relocate to the next path
            if(pathcount < nrpaths)
            {
                // Initialising parameters to start moving to new path
                pointcount = 0;                 // reset the point count
                writing = 0;                    // switch off writing mode
                writingcondition(writing);      // set tip parameters to idle state
                // Extracting the vector positions [x,y] for the next writing point of the new path
                vector_xtemp = picked_coordinates[0][0] + patternwidth * path[pathcount][pointcount][0];
                vector_ytemp = picked_coordinates[0][1] - patternheight *  path[pathcount][pointcount][1];
                next_coordinate = [vector_xtemp , vector_ytemp];
                pointcount++;               // add one unit to the point count
                relocate();                 // relocate the tip to its first position of the new paths
                // Add a dwell-time once the first co-ordinate of the path is reached
                //sleep(path_dwell_time*1000);    // convert s into ms for the sleep() function, between paths
            }
            // -- Else, if all paths have been written, stop writing and move back to initial position
            else
            {
                writing = 0;                    // switch off writing mode
                writingcondition(writing);      // set tip parameters to idle state
                XYScanner.resume();             // resume parameters back to normal
                XYScanner.Raster_Time = init_rastertime;    // set tip speed back to initial value
            }
        }
    }
    
    
}

// Entity observer to intercept the CU's events emitted when the tip finally arrives at its original position (after the 'resume operations' function has done its job).
function XYScanner.XY_Position_Return ()
{
    init(); // re-initialise the script variables
}

/*------------------------------------------------------------------------------------
 -------- FUNCTIONS */
// Function to relocate the tip position to the next coordinate
function relocate ()
{
    XYScanner.Target_Position = next_coordinate;
    XYScanner.move();
}
// Function to change gap-voltage, set-point and scan speed, depending on whether the tip is writing or being idle
function writingcondition (write)
{
    // Tip Writing parameters
    if(write == 1)
    {
        Regulator.Setpoint_1 = 1.e-12;
        sleep(1);
        GapVoltageControl.Voltage = 3;
        sleep(1);
        GapVoltageControl.Voltage = write_gap_voltage;
        Regulator.Setpoint_1 = write_current_setpoint;
        XYScanner.Raster_Time = write_rastertime;
    }
    // Tip Idle parameters (moving, but not writing)
    else
    {
        Regulator.Setpoint_1 = 1.e-12;
        sleep(1);
        GapVoltageControl.Voltage = idle_gap_voltage;
        Regulator.Setpoint_1 = idle_current_setpoint;
        XYScanner.Raster_Time = idle_rastertime;
    }
}
// Function to initialise the script variables
function init ()
{
    next_coordinate  = [null];
    picked_coordinates = [null];
    picked_points = 0;
    vector_x = 0;
    vector_y = 0;
    vector_xtemp = 0;
    vector_ytemp = 0;
    patternheight = 0;
    patternwidth = 0;
    pathcount = 0;
    pointcount = 0;


// WRITE COMPASSS
//path=[[[0.0733333,0.21],[0.0616667,0.12],[0.03,0.12],[0.015,0.2],[0.015,0.73],[0.0233333,0.81],[0.0566667,0.81],[0.0716667,0.75]],[[0.153333,0.2],[0.146667,0.11],[0.105,0.11],[0.0933333,0.2],[0.0933333,0.75],[0.101667,0.84],[0.143333,0.84],[0.155,0.78],[0.153333,0.2]],[[0.173333,0.85],[0.173333,0.1],[0.21,0.84],[0.233333,0.1],[0.238333,0.86]],[[0.26,0.87],[0.26,0.11],[0.296667,0.11],[0.313333,0.17],[0.313333,0.37],[0.3,0.44],[0.26,0.44]],[[0.32,0.9],[0.353333,0.1],[0.388333,0.9]],[[0.333333,0.6],[0.375,0.6]],[[0.451667,0.18],[0.443333,0.1],[0.408333,0.1],[0.398333,0.21],[0.398333,0.37],[0.451667,0.56],[0.451667,0.78],[0.443333,0.89],[0.408333,0.89],[0.4,0.79]],[[0.51,0.17],[0.5,0.1],[0.473333,0.1],[0.465,0.2],[0.463333,0.39],[0.508333,0.55],[0.508333,0.78],[0.498333,0.89],[0.471667,0.89],[0.463333,0.81]],[[0.558333,0.18],[0.55,0.1],[0.525,0.1],[0.516667,0.19],[0.516667,0.4],[0.556667,0.56],[0.556667,0.78],[0.548333,0.89],[0.525,0.89],[0.515,0.82]]];
//points = [8,9,5,7,3,2,10,10,10];
//nrpaths = 9;





path=[[[0.45957910508751615, 1.0], [0.45957910508751615, 0.8186274509803922], [0.462189834048446, 0.803921568627451], [0.462189834048446, 1.0], [0.4648005630093759, 1.0], [0.4648005630093759, 0.7892156862745099], [0.46741129197030573, 0.7745098039215687], [0.46741129197030573, 1.0], [0.47002202093123563, 1.0], [0.47002202093123563, 0.7598039215686275], [0.4726327498921655, 0.7450980392156862], [0.4726327498921655, 1.0], [0.47524347885309537, 1.0], [0.47524347885309537, 0.7303921568627451], [0.47785420781402527, 0.7156862745098039], [0.47785420781402527, 1.0], [0.4804649367749551, 1.0], [0.4804649367749551, 0.7009803921568628], [0.483075665735885, 0.6862745098039216], [0.483075665735885, 1.0], [0.48568639469681485, 1.0], [0.48568639469681485, 0.6715686274509804], [0.48829712365774475, 0.6568627450980392], [0.48829712365774475, 1.0], [0.4909078526186746, 1.0], [0.4909078526186746, 0.6421568627450981], [0.4935185815796045, 0.5333333333333333], [0.4935185815796045, 1.0], [0.4961293105405344, 1.0], [0.4961293105405344, 0.5333333333333333], [0.4987400395014642, 0.5333333333333333], [0.4987400395014642, 1.0], [0.5013507684623941, 1.0], [0.5013507684623941, 0.5333333333333333], [0.503961497423324, 0.5333333333333333], [0.503961497423324, 1.0], [0.5065722263842538, 1.0], [0.5065722263842538, 0.6421568627450981], [0.5091829553451838, 0.6568627450980392], [0.5091829553451838, 1.0], [0.5117936843061136, 1.0], [0.5117936843061136, 0.6715686274509804], [0.5144044132670434, 0.6862745098039216], [0.5144044132670434, 1.0], [0.5170151422279734, 1.0], [0.5170151422279734, 0.7009803921568628], [0.5196258711889032, 0.7156862745098039], [0.5196258711889032, 1.0], [0.5222366001498331, 1.0], [0.5222366001498331, 0.7303921568627451], [0.5248473291107629, 0.7450980392156862], [0.5248473291107629, 1.0], [0.5274580580716929, 1.0], [0.5274580580716929, 0.7598039215686275], [0.5300687870326227, 0.7745098039215687], [0.5300687870326227, 1.0], [0.5326795159935526, 1.0], [0.5326795159935526, 0.7892156862745099], [0.5352902449544824, 0.803921568627451], [0.5352902449544824, 1.0], [0.5379009739154124, 1.0], [0.5379009739154124, 0.8186274509803922], [0.5405117028763422, 0.8333333333333334], [0.5405117028763422, 1.0]], [[1.0, 0.5416666666666666], [1.0, 0.4583333333333333], [0.9974800790029285, 0.4583333333333333], [0.9974800790029285, 0.5416666666666666], [0.9949601580058571, 0.5416666666666666], [0.9949601580058571, 0.4583333333333333], [0.9924402370087856, 0.4583333333333333], [0.9924402370087856, 0.5416666666666666], [0.9899203160117142, 0.5416666666666666], [0.9899203160117142, 0.4583333333333333], [0.9874003950146428, 0.4583333333333333], [0.9874003950146428, 0.5416666666666666], [0.9848804740175713, 0.5416666666666666], [0.9848804740175713, 0.4583333333333333], [0.9823605530204997, 0.4583333333333333], [0.9823605530204997, 0.5416666666666666], [0.9798406320234284, 0.5416666666666666], [0.9798406320234284, 0.4583333333333333], [0.977320711026357, 0.4583333333333333], [0.977320711026357, 0.5416666666666666], [0.9748007900292857, 0.5416666666666666], [0.9748007900292857, 0.4583333333333333], [0.9722808690322141, 0.4583333333333333], [0.9722808690322141, 0.5416666666666666], [0.9697609480351426, 0.5416666666666666], [0.9697609480351426, 0.4583333333333333], [0.9672410270380711, 0.4583333333333333], [0.9672410270380711, 0.5416666666666666], [0.9647211060409998, 0.5416666666666666], [0.9647211060409998, 0.4583333333333333], [0.9622011850439283, 0.4583333333333333], [0.9622011850439283, 0.5416666666666666], [0.9596812640468567, 0.5416666666666666], [0.9596812640468567, 0.4583333333333333], [0.9571613430497854, 0.4587590579710145], [0.9571613430497854, 0.5416666666666666], [0.954641422052714, 0.5416666666666666], [0.954641422052714, 0.4597644927536232], [0.9521215010556426, 0.46076992753623186], [0.9521215010556426, 0.5416666666666666], [0.9496015800585711, 0.5416666666666666], [0.9496015800585711, 0.46177536231884053], [0.9470816590614995, 0.46278079710144926], [0.9470816590614995, 0.5416666666666666], [0.9445617380644282, 0.5416666666666666], [0.9445617380644282, 0.463786231884058], [0.9420418170673568, 0.46479166666666666], [0.9420418170673568, 0.5416666666666666], [0.9395218960702852, 0.5416666666666666], [0.9395218960702852, 0.46579710144927533], [0.9370019750732139, 0.466802536231884], [0.9370019750732139, 0.5416666666666666], [0.9344820540761424, 0.5416666666666666], [0.9344820540761424, 0.4678079710144927], [0.931962133079071, 0.4688134057971014], [0.931962133079071, 0.5416666666666666], [0.9294422120819996, 0.5416666666666666], [0.9294422120819996, 0.4698188405797102], [0.9269222910849281, 0.47082427536231886], [0.9269222910849281, 0.5416666666666666], [0.9244023700878565, 0.5416666666666666], [0.9244023700878565, 0.4718297101449275], [0.9218824490907852, 0.47283514492753626], [0.9218824490907852, 0.5416666666666666], [0.9193625280937138, 0.5416666666666666], [0.9193625280937138, 0.4738405797101449], [0.9168426070966424, 0.4748460144927536], [0.9168426070966424, 0.5416666666666666], [0.9143226860995709, 0.5416666666666666], [0.9143226860995709, 0.4741485507246377], [0.9118027651024994, 0.473143115942029], [0.9118027651024994, 0.5416666666666666], [0.909282844105428, 0.5416666666666666], [0.909282844105428, 0.47213768115942034], [0.9067629231083566, 0.47113224637681156], [0.9067629231083566, 0.5416666666666666], [0.904243002111285, 0.5416666666666666], [0.904243002111285, 0.47012681159420294], [0.9017230811142135, 0.46912137681159416], [0.9017230811142135, 0.5416666666666666], [0.8992031601171422, 0.5416666666666666], [0.8992031601171422, 0.4681159420289855], [0.8966832391200709, 0.4671105072463768], [0.8966832391200709, 0.5416666666666666], [0.8941633181229994, 0.5416666666666666], [0.8941633181229994, 0.46610507246376814], [0.8916433971259279, 0.4650996376811594], [0.8916433971259279, 0.5416666666666666], [0.8891234761288563, 0.5416666666666666], [0.8891234761288563, 0.46409420289855075], [0.886603555131785, 0.463088768115942], [0.886603555131785, 0.5416666666666666], [0.8840836341347136, 0.5416666666666666], [0.8840836341347136, 0.46208333333333335], [0.8815637131376421, 0.4610778985507247], [0.8815637131376421, 0.5416666666666666], [0.8790437921405706, 0.5416666666666666], [0.8790437921405706, 0.4600724637681159], [0.8765238711434992, 0.4590670289855073], [0.8765238711434992, 0.5416666666666666], [0.8740039501464278, 0.5416666666666666], [0.8740039501464278, 0.4583333333333333], [0.8714840291493564, 0.4583333333333333], [0.8714840291493564, 0.5416666666666666], [0.8689641081522849, 0.5416666666666666], [0.8689641081522849, 0.4583333333333333], [0.8664441871552134, 0.4583333333333333], [0.8664441871552134, 0.5416666666666666], [0.863924266158142, 0.5416666666666666], [0.863924266158142, 0.4583333333333333], [0.8614043451610707, 0.4583333333333333], [0.8614043451610707, 0.5416666666666666], [0.8588844241639992, 0.5416666666666666], [0.8588844241639992, 0.4583333333333333], [0.8563645031669276, 0.4583333333333333], [0.8563645031669276, 0.5416666666666666], [0.8538445821698561, 0.5416666666666666], [0.8538445821698561, 0.4583333333333333], [0.8513246611727848, 0.4583333333333333], [0.8513246611727848, 0.5416666666666666], [0.8488047401757134, 0.5416666666666666], [0.8488047401757134, 0.4583333333333333], [0.846284819178642, 0.4583333333333333], [0.846284819178642, 0.5416666666666666], [0.8437648981815704, 0.5416666666666666], [0.8437648981815704, 0.4583333333333333], [0.841244977184499, 0.4583333333333333], [0.841244977184499, 0.5416666666666666], [0.8387250561874277, 0.5416666666666666], [0.8387250561874277, 0.4583333333333333], [0.8362051351903561, 0.4583333333333333], [0.8362051351903561, 0.5416666666666666], [0.8336852141932847, 0.5416666666666666], [0.8336852141932847, 0.4583333333333333], [0.8311652931962132, 0.4590391002415458], [0.8311652931962132, 0.5409608997584542], [0.8286453721991418, 0.5399434955141478], [0.8286453721991418, 0.4600565044858523], [0.8261254512020705, 0.4610739087301587], [0.8261254512020705, 0.5389260912698413], [0.8236055302049989, 0.5379086870255348], [0.8236055302049989, 0.46209131297446515], [0.8210856092079275, 0.4631087172187716], [0.8210856092079275, 0.5368912827812284], [0.818565688210856, 0.535873878536922], [0.818565688210856, 0.46412612146307797], [0.8160457672137846, 0.4651435257073844], [0.8160457672137846, 0.5348564742926156], [0.8135258462167132, 0.5338390700483092], [0.8135258462167132, 0.46616092995169084], [0.8110059252196418, 0.4671783341959972], [0.8110059252196418, 0.5328216658040028], [0.8084860042225702, 0.5318042615596964], [0.8084860042225702, 0.46819573844030365], [0.8059660832254988, 0.46921314268461006], [0.8059660832254988, 0.5307868573153899], [0.8034461622284275, 0.5297694530710836], [0.8034461622284275, 0.4702305469289164], [0.8009262412313559, 0.47124795117322293], [0.8009262412313559, 0.5287520488267771], [0.7984063202342845, 0.5277346445824707], [0.7984063202342845, 0.4722653554175293], [0.795886399237213, 0.47328275966183575], [0.795886399237213, 0.5267172403381642], [0.7933664782401416, 0.5256998360938578], [0.7933664782401416, 0.4743001639061422], [0.7908465572430703, 0.47531756815044857], [0.7908465572430703, 0.5246824318495514], [0.7883266362459987, 0.523665027605245], [0.7883266362459987, 0.476334972394755], [0.7858067152489272, 0.47735237663906144], [0.7858067152489272, 0.5226476233609386], [0.7832867942518558, 0.5216302191166322], [0.7832867942518558, 0.4783697808833678], [0.7807668732547844, 0.47938718512767425], [0.7807668732547844, 0.5206128148723258], [0.7782469522577129, 0.5195954106280193], [0.7782469522577129, 0.48040458937198066], [0.7757270312606416, 0.4814219936162871], [0.7757270312606416, 0.5185780063837129], [0.77320711026357, 0.5175606021394065], [0.77320711026357, 0.48243939786059353], [0.7706871892664986, 0.4834568021048999], [0.7706871892664986, 0.5165431978951001], [0.7681672682694273, 0.5155257936507937], [0.7681672682694273, 0.48447420634920635], [0.7656473472723557, 0.48549161059351276], [0.7656473472723557, 0.5145083894064872], [0.7631274262752843, 0.5134909851621808], [0.7631274262752843, 0.48650901483781916], [0.7606075052782129, 0.4875264190821256], [0.7606075052782129, 0.5124735809178744], [0.7580875842811414, 0.511456176673568], [0.7580875842811414, 0.48854382332643204], [0.7555676632840701, 0.4895612275707384], [0.7555676632840701, 0.5104387724292616], [0.7530477422869986, 0.5094213681849552], [0.7530477422869986, 0.49057863181504485], [0.750527821289927, 0.49159603605935126], [0.750527821289927, 0.5084039639406487], [0.7480079002928556, 0.5073865596963423], [0.7480079002928556, 0.4926134403036577], [0.7454879792957843, 0.49363084454796413], [0.7454879792957843, 0.5063691554520359], [0.7429680582987127, 0.50625], [0.7429680582987127, 0.49375], [0.7404481373016414, 0.49375], [0.7404481373016414, 0.50625], [0.7379282163045698, 0.50625], [0.7379282163045698, 0.49375], [0.7354082953074984, 0.49375], [0.7354082953074984, 0.50625], [0.7328883743104271, 0.50625], [0.7328883743104271, 0.49375], [0.7303684533133555, 0.49375], [0.7303684533133555, 0.50625], [0.727848532316284, 0.50625], [0.727848532316284, 0.49375], [0.7253286113192127, 0.49375], [0.7253286113192127, 0.50625], [0.7228086903221412, 0.50625], [0.7228086903221412, 0.49375], [0.7202887693250697, 0.49375], [0.7202887693250697, 0.50625], [0.7177688483279984, 0.50625], [0.7177688483279984, 0.49375], [0.7152489273309268, 0.49375], [0.7152489273309268, 0.50625], [0.7127290063338554, 0.50625], [0.7127290063338554, 0.49375], [0.7102090853367841, 0.49375], [0.7102090853367841, 0.50625], [0.7076891643397125, 0.50625], [0.7076891643397125, 0.49375], [0.705169243342641, 0.49375], [0.705169243342641, 0.50625], [0.7026493223455696, 0.50625], [0.7026493223455696, 0.49375], [0.7001294013484982, 0.49375], [0.7001294013484982, 0.50625], [0.6976094803514269, 0.50625], [0.6976094803514269, 0.49375], [0.6950895593543553, 0.49375], [0.6950895593543553, 0.50625], [0.6925696383572838, 0.50625], [0.6925696383572838, 0.49375], [0.6900497173602125, 0.49375], [0.6900497173602125, 0.50625], [0.687529796363141, 0.50625], [0.687529796363141, 0.49375], [0.6850098753660695, 0.49375], [0.6850098753660695, 0.50625], [0.6824899543689982, 0.50625], [0.6824899543689982, 0.49375], [0.6799700333719267, 0.49375], [0.6799700333719267, 0.50625], [0.6774501123748552, 0.50625], [0.6774501123748552, 0.49375], [0.6749301913777838, 0.49375], [0.6749301913777838, 0.50625], [0.6724102703807123, 0.50625], [0.6724102703807123, 0.49375], [0.6698903493836409, 0.49375], [0.6698903493836409, 0.50625], [0.6673704283865695, 0.50625], [0.6673704283865695, 0.49375], [0.664850507389498, 0.49375], [0.664850507389498, 0.50625], [0.6623305863924265, 0.50625], [0.6623305863924265, 0.49375], [0.6598106653953552, 0.49375], [0.6598106653953552, 0.50625], [0.6572907443982837, 0.50625], [0.6572907443982837, 0.49375], [0.6547708234012123, 0.49375], [0.6547708234012123, 0.50625], [0.6522509024041407, 0.50625], [0.6522509024041407, 0.49375], [0.6497309814070693, 0.49375], [0.6497309814070693, 0.50625], [0.6472110604099979, 0.50625], [0.6472110604099979, 0.49375], [0.6446911394129264, 0.49375], [0.6446911394129264, 0.50625], [0.642171218415855, 0.50625], [0.642171218415855, 0.49375], [0.6396512974187836, 0.49375], [0.6396512974187836, 0.50625], [0.6371313764217121, 0.50625], [0.6371313764217121, 0.49375], [0.6346114554246407, 0.49375], [0.6346114554246407, 0.50625], [0.6320915344275693, 0.50625], [0.6320915344275693, 0.49375], [0.6295716134304978, 0.49375], [0.6295716134304978, 0.50625], [0.6270516924334263, 0.50625], [0.6270516924334263, 0.49375], [0.624531771436355, 0.49375], [0.624531771436355, 0.50625], [0.6220118504392834, 0.50625], [0.6220118504392834, 0.49375], [0.6194919294422121, 0.49375], [0.6194919294422121, 0.50625], [0.6169720084451406, 0.50625], [0.6169720084451406, 0.49375], [0.6144520874480691, 0.49375], [0.6144520874480691, 0.50625], [0.6119321664509977, 0.50625], [0.6119321664509977, 0.49375], [0.6094122454539262, 0.49375], [0.6094122454539262, 0.50625], [0.6068923244568548, 0.50625], [0.6068923244568548, 0.49375], [0.6043724034597834, 0.49375], [0.6043724034597834, 0.50625], [0.601852482462712, 0.50625], [0.601852482462712, 0.49375], [0.5993325614656405, 0.49375], [0.5993325614656405, 0.50625], [0.5968126404685691, 0.50625], [0.5968126404685691, 0.49375], [0.5942927194714976, 0.49375], [0.5942927194714976, 0.50625], [0.5917727984744261, 0.50625], [0.5917727984744261, 0.49375], [0.5892528774773547, 0.49375], [0.5892528774773547, 0.50625], [0.5867329564802832, 0.50625], [0.5867329564802832, 0.49375], [0.5842130354832119, 0.49375], [0.5842130354832119, 0.50625], [0.5816931144861404, 0.50625], [0.5816931144861404, 0.49375], [0.5791731934890689, 0.49375], [0.5791731934890689, 0.50625], [0.5766532724919975, 0.50625], [0.5766532724919975, 0.49375], [0.5741333514949261, 0.49375], [0.5741333514949261, 0.50625], [0.5716134304978546, 0.50625], [0.5716134304978546, 0.49375], [0.5690935095007832, 0.49375], [0.5690935095007832, 0.50625], [0.5665735885037118, 0.50625], [0.5665735885037118, 0.49375], [0.5640536675066402, 0.49375], [0.5640536675066402, 0.50625], [0.5615337465095689, 0.50625], [0.5615337465095689, 0.49375], [0.5590138255124975, 0.49375], [0.5590138255124975, 0.50625], [0.5564939045154259, 0.50625], [0.5564939045154259, 0.49375], [0.5539739835183545, 0.49375], [0.5539739835183545, 0.50625], [0.551454062521283, 0.50625], [0.551454062521283, 0.49375], [0.5489341415242116, 0.49375], [0.5489341415242116, 0.50625], [0.5464142205271402, 0.50625], [0.5464142205271402, 0.49375], [0.5438942995300687, 0.49375], [0.5438942995300687, 0.50625], [0.5413743785329973, 0.50625], [0.5413743785329973, 0.49375], [0.5388544575359259, 0.49375], [0.5388544575359259, 0.50625]], [[0.4611455424640741, 0.50625], [0.4611455424640741, 0.49375], [0.4586256214670026, 0.49375], [0.4586256214670026, 0.50625], [0.4561057004699312, 0.50625], [0.4561057004699312, 0.49375], [0.4535857794728598, 0.49375], [0.4535857794728598, 0.50625], [0.45106585847578834, 0.50625], [0.45106585847578834, 0.49375], [0.44854593747871685, 0.49375], [0.44854593747871685, 0.50625], [0.4460260164816454, 0.50625], [0.4460260164816454, 0.49375], [0.443506095484574, 0.49375], [0.443506095484574, 0.50625], [0.4409861744875025, 0.50625], [0.4409861744875025, 0.49375], [0.43846625349043106, 0.49375], [0.43846625349043106, 0.50625], [0.4359463324933597, 0.50625], [0.4359463324933597, 0.49375], [0.43342641149628824, 0.49375], [0.43342641149628824, 0.50625], [0.43090649049921675, 0.50625], [0.43090649049921675, 0.49375], [0.4283865695021453, 0.49375], [0.4283865695021453, 0.50625], [0.4258666485050739, 0.50625], [0.4258666485050739, 0.49375], [0.4233467275080024, 0.49375], [0.4233467275080024, 0.50625], [0.42082680651093096, 0.50625], [0.42082680651093096, 0.49375], [0.4183068855138595, 0.49375], [0.4183068855138595, 0.50625], [0.41578696451678815, 0.50625], [0.41578696451678815, 0.49375], [0.41326704351971666, 0.49375], [0.41326704351971666, 0.50625], [0.4107471225226452, 0.50625], [0.4107471225226452, 0.49375], [0.4082272015255738, 0.49375], [0.4082272015255738, 0.50625], [0.4057072805285023, 0.50625], [0.4057072805285023, 0.49375], [0.40318735953143087, 0.49375], [0.40318735953143087, 0.50625], [0.40066743853435943, 0.50625], [0.40066743853435943, 0.49375], [0.39814751753728805, 0.49375], [0.39814751753728805, 0.50625], [0.39562759654021656, 0.50625], [0.39562759654021656, 0.49375], [0.39310767554314513, 0.49375], [0.39310767554314513, 0.50625], [0.3905877545460737, 0.50625], [0.3905877545460737, 0.49375], [0.3880678335490022, 0.49375], [0.3880678335490022, 0.50625], [0.38554791255193077, 0.50625], [0.38554791255193077, 0.49375], [0.38302799155485934, 0.49375], [0.38302799155485934, 0.50625], [0.38050807055778785, 0.50625], [0.38050807055778785, 0.49375], [0.37798814956071647, 0.49375], [0.37798814956071647, 0.50625], [0.37546822856364503, 0.50625], [0.37546822856364503, 0.49375], [0.3729483075665736, 0.49375], [0.3729483075665736, 0.50625], [0.3704283865695021, 0.50625], [0.3704283865695021, 0.49375], [0.3679084655724307, 0.49375], [0.3679084655724307, 0.50625], [0.36538854457535924, 0.50625], [0.36538854457535924, 0.49375], [0.36286862357828775, 0.49375], [0.36286862357828775, 0.50625], [0.3603487025812163, 0.50625], [0.3603487025812163, 0.49375], [0.35782878158414494, 0.49375], [0.35782878158414494, 0.50625], [0.3553088605870735, 0.50625], [0.3553088605870735, 0.49375], [0.352788939590002, 0.49375], [0.352788939590002, 0.50625], [0.3502690185929306, 0.50625], [0.3502690185929306, 0.49375], [0.34774909759585915, 0.49375], [0.34774909759585915, 0.50625], [0.34522917659878766, 0.50625], [0.34522917659878766, 0.49375], [0.3427092556017162, 0.49375], [0.3427092556017162, 0.50625], [0.3401893346046448, 0.50625], [0.3401893346046448, 0.49375], [0.33766941360757335, 0.49375], [0.33766941360757335, 0.50625], [0.3351494926105019, 0.50625], [0.3351494926105019, 0.49375], [0.3326295716134305, 0.49375], [0.3326295716134305, 0.50625], [0.33010965061635905, 0.50625], [0.33010965061635905, 0.49375], [0.32758972961928756, 0.49375], [0.32758972961928756, 0.50625], [0.3250698086222161, 0.50625], [0.3250698086222161, 0.49375], [0.3225498876251447, 0.49375], [0.3225498876251447, 0.50625], [0.32002996662807326, 0.50625], [0.32002996662807326, 0.49375], [0.3175100456310018, 0.49375], [0.3175100456310018, 0.50625], [0.3149901246339304, 0.50625], [0.3149901246339304, 0.49375], [0.31247020363685896, 0.49375], [0.31247020363685896, 0.50625], [0.30995028263978747, 0.50625], [0.30995028263978747, 0.49375], [0.30743036164271603, 0.49375], [0.30743036164271603, 0.50625], [0.3049104406456446, 0.50625], [0.3049104406456446, 0.49375], [0.30239051964857316, 0.49375], [0.30239051964857316, 0.50625], [0.29987059865150173, 0.50625], [0.29987059865150173, 0.49375], [0.29735067765443024, 0.49375], [0.29735067765443024, 0.50625], [0.29483075665735886, 0.50625], [0.29483075665735886, 0.49375], [0.29231083566028737, 0.49375], [0.29231083566028737, 0.50625], [0.28979091466321594, 0.50625], [0.28979091466321594, 0.49375], [0.2872709936661445, 0.49375], [0.2872709936661445, 0.50625], [0.28475107266907307, 0.50625], [0.28475107266907307, 0.49375], [0.28223115167200163, 0.49375], [0.28223115167200163, 0.50625], [0.27971123067493014, 0.50625], [0.27971123067493014, 0.49375], [0.2771913096778587, 0.49375], [0.2771913096778587, 0.50625], [0.2746713886807873, 0.50625], [0.2746713886807873, 0.49375], [0.27215146768371584, 0.49375], [0.27215146768371584, 0.50625], [0.2696315466866444, 0.50625], [0.2696315466866444, 0.49375], [0.2671116256895729, 0.49375], [0.2671116256895729, 0.50625], [0.26459170469250154, 0.50625], [0.26459170469250154, 0.49375], [0.26207178369543005, 0.49375], [0.26207178369543005, 0.50625], [0.2595518626983586, 0.50625], [0.2595518626983586, 0.49375], [0.2570319417012872, 0.49375], [0.2570319417012872, 0.50625], [0.25451202070421575, 0.50625], [0.25451202070421575, 0.49375], [0.2519920997071443, 0.49363084454796413], [0.2519920997071443, 0.5063691554520359], [0.24947217871007285, 0.5073865596963423], [0.24947217871007285, 0.4926134403036577], [0.2469522577130014, 0.49159603605935126], [0.2469522577130014, 0.5084039639406487], [0.24443233671592998, 0.5094213681849551], [0.24443233671592998, 0.4905786318150449], [0.24191241571885852, 0.48956122757073844], [0.24191241571885852, 0.5104387724292615], [0.23939249472178709, 0.511456176673568], [0.23939249472178709, 0.48854382332643204], [0.23687257372471565, 0.4875264190821256], [0.23687257372471565, 0.5124735809178744], [0.23435265272764422, 0.5134909851621808], [0.23435265272764422, 0.48650901483781916], [0.23183273173057276, 0.48549161059351276], [0.23183273173057276, 0.5145083894064872], [0.2293128107335013, 0.5155257936507937], [0.2293128107335013, 0.48447420634920635], [0.2267928897364299, 0.4834568021048999], [0.2267928897364299, 0.5165431978951001], [0.22427296873935842, 0.5175606021394065], [0.22427296873935842, 0.48243939786059353], [0.221753047742287, 0.4814219936162871], [0.221753047742287, 0.5185780063837129], [0.21923312674521553, 0.5195954106280193], [0.21923312674521553, 0.48040458937198066], [0.21671320574814412, 0.4793871851276743], [0.21671320574814412, 0.5206128148723257], [0.21419328475107266, 0.5216302191166321], [0.21419328475107266, 0.47836978088336785], [0.2116733637540012, 0.47735237663906144], [0.2116733637540012, 0.5226476233609386], [0.20915344275692976, 0.523665027605245], [0.20915344275692976, 0.476334972394755], [0.20663352175985833, 0.47531756815044857], [0.20663352175985833, 0.5246824318495514], [0.2041136007627869, 0.5256998360938578], [0.2041136007627869, 0.4743001639061422], [0.20159367976571543, 0.47328275966183575], [0.20159367976571543, 0.5267172403381642], [0.19907375876864397, 0.5277346445824707], [0.19907375876864397, 0.4722653554175293], [0.19655383777157256, 0.47124795117322293], [0.19655383777157256, 0.5287520488267771], [0.1940339167745011, 0.5297694530710835], [0.1940339167745011, 0.4702305469289165], [0.19151399577742967, 0.46921314268461006], [0.19151399577742967, 0.5307868573153899], [0.1889940747803582, 0.5318042615596964], [0.1889940747803582, 0.46819573844030365], [0.1864741537832868, 0.46717833419599725], [0.1864741537832868, 0.5328216658040027], [0.18395423278621534, 0.5338390700483092], [0.18395423278621534, 0.46616092995169084], [0.18143431178914388, 0.4651435257073844], [0.18143431178914388, 0.5348564742926156], [0.17891439079207244, 0.535873878536922], [0.17891439079207244, 0.46412612146307797], [0.176394469795001, 0.4631087172187716], [0.176394469795001, 0.5368912827812284], [0.17387454879792957, 0.5379086870255348], [0.17387454879792957, 0.46209131297446515], [0.1713546278008581, 0.4610739087301587], [0.1713546278008581, 0.5389260912698413], [0.16883470680378665, 0.5399434955141478], [0.16883470680378665, 0.4600565044858523], [0.16631478580671522, 0.4590391002415458], [0.16631478580671522, 0.5409608997584542], [0.16379486480964378, 0.5416666666666666], [0.16379486480964378, 0.4583333333333333], [0.16127494381257235, 0.4583333333333333], [0.16127494381257235, 0.5416666666666666], [0.1587550228155009, 0.5416666666666666], [0.1587550228155009, 0.4583333333333333], [0.15623510181842948, 0.4583333333333333], [0.15623510181842948, 0.5416666666666666], [0.15371518082135802, 0.5416666666666666], [0.15371518082135802, 0.4583333333333333], [0.15119525982428655, 0.4583333333333333], [0.15119525982428655, 0.5416666666666666], [0.14867533882721512, 0.5416666666666666], [0.14867533882721512, 0.4583333333333333], [0.14615541783014374, 0.4583333333333333], [0.14615541783014374, 0.5416666666666666], [0.1436354968330722, 0.5416666666666666], [0.1436354968330722, 0.4583333333333333], [0.14111557583600082, 0.4583333333333333], [0.14111557583600082, 0.5416666666666666], [0.13859565483892938, 0.5416666666666666], [0.13859565483892938, 0.4583333333333333], [0.13607573384185792, 0.4583333333333333], [0.13607573384185792, 0.5416666666666666], [0.13355581284478646, 0.5416666666666666], [0.13355581284478646, 0.4583333333333333], [0.13103589184771502, 0.4583333333333333], [0.13103589184771502, 0.5416666666666666], [0.12851597085064356, 0.5416666666666666], [0.12851597085064356, 0.4583333333333333], [0.1259960498535721, 0.4583333333333333], [0.1259960498535721, 0.5416666666666666], [0.12347612885650074, 0.5416666666666666], [0.12347612885650074, 0.4583333333333333], [0.12095620785942929, 0.4575996376811594], [0.12095620785942929, 0.5416666666666666], [0.11843628686235783, 0.5416666666666666], [0.11843628686235783, 0.45659420289855074], [0.11591636586528638, 0.455588768115942], [0.11591636586528638, 0.5416666666666666], [0.11339644486821493, 0.5416666666666666], [0.11339644486821493, 0.45458333333333334], [0.11087652387114347, 0.45357789855072467], [0.11087652387114347, 0.5416666666666666], [0.10835660287407202, 0.5416666666666666], [0.10835660287407202, 0.45257246376811594], [0.10583668187700064, 0.45156702898550727], [0.10583668187700064, 0.5416666666666666], [0.10331676087992911, 0.5416666666666666], [0.10331676087992911, 0.4505615942028985], [0.10079683988285773, 0.4495561594202898], [0.10079683988285773, 0.5416666666666666], [0.09827691888578628, 0.5416666666666666], [0.09827691888578628, 0.44855072463768114], [0.09575699788871483, 0.44754528985507247], [0.09575699788871483, 0.5416666666666666], [0.09323707689164337, 0.5416666666666666], [0.09323707689164337, 0.44653985507246374], [0.09071715589457192, 0.44553442028985507], [0.09071715589457192, 0.5416666666666666], [0.08819723489750048, 0.5416666666666666], [0.08819723489750048, 0.44452898550724634], [0.08567731390042901, 0.44352355072463767], [0.08567731390042901, 0.5416666666666666], [0.08315739290335764, 0.5416666666666666], [0.08315739290335764, 0.442518115942029], [0.08063747190628619, 0.44182065217391303], [0.08063747190628619, 0.5416666666666666], [0.07811755090921474, 0.5416666666666666], [0.07811755090921474, 0.44282608695652176], [0.07559762991214328, 0.44383152173913043], [0.07559762991214328, 0.5416666666666666], [0.07307770891507183, 0.5416666666666666], [0.07307770891507183, 0.44483695652173916], [0.07055778791800038, 0.44584239130434783], [0.07055778791800038, 0.5416666666666666], [0.06803786692092892, 0.5416666666666666], [0.06803786692092892, 0.4468478260869565], [0.06551794592385755, 0.4478532608695652], [0.06551794592385755, 0.5416666666666666], [0.06299802492678609, 0.5416666666666666], [0.06299802492678609, 0.4488586956521739], [0.060478103929714644, 0.4498641304347827], [0.060478103929714644, 0.5416666666666666], [0.05795818293264319, 0.5416666666666666], [0.05795818293264319, 0.45086956521739135], [0.055438261935571734, 0.451875], [0.055438261935571734, 0.5416666666666666], [0.052918340938500286, 0.5416666666666666], [0.052918340938500286, 0.45288043478260864], [0.05039841994142883, 0.4538858695652174], [0.05039841994142883, 0.5416666666666666], [0.047878498944357376, 0.5416666666666666], [0.047878498944357376, 0.45489130434782615], [0.04535857794728593, 0.4558967391304348], [0.04535857794728593, 0.5416666666666666], [0.04283865695021455, 0.5416666666666666], [0.04283865695021455, 0.4569021739130435], [0.040318735953143094, 0.45790760869565217], [0.040318735953143094, 0.5416666666666666], [0.03779881495607164, 0.5416666666666666], [0.03779881495607164, 0.4583333333333333], [0.03527889395900019, 0.4583333333333333], [0.03527889395900019, 0.5416666666666666], [0.032758972961928735, 0.5416666666666666], [0.032758972961928735, 0.4583333333333333], [0.030239051964857284, 0.4583333333333333], [0.030239051964857284, 0.5416666666666666], [0.02771913096778583, 0.5416666666666666], [0.02771913096778583, 0.4583333333333333], [0.025199209970714453, 0.4583333333333333], [0.025199209970714453, 0.5416666666666666], [0.022679288973643002, 0.5416666666666666], [0.022679288973643002, 0.4583333333333333], [0.020159367976571547, 0.4583333333333333], [0.020159367976571547, 0.5416666666666666], [0.017639446979500095, 0.5416666666666666], [0.017639446979500095, 0.4583333333333333], [0.015119525982428642, 0.4583333333333333], [0.015119525982428642, 0.5416666666666666], [0.012599604985357189, 0.5416666666666666], [0.012599604985357189, 0.4583333333333333], [0.010079683988285735, 0.4583333333333333], [0.010079683988285735, 0.5416666666666666], [0.007559762991214283, 0.5416666666666666], [0.007559762991214283, 0.4583333333333333], [0.005039841994142906, 0.4583333333333333], [0.005039841994142906, 0.5416666666666666], [0.002519920997071453, 0.5416666666666666], [0.002519920997071453, 0.4583333333333333], [0.0, 0.4583333333333333], [0.0, 0.5416666666666666]], [[0.45957910508751615, 0.18137254901960784], [0.45957910508751615, -0.0], [0.462189834048446, -0.0], [0.462189834048446, 0.196078431372549], [0.4648005630093759, 0.21078431372549017], [0.4648005630093759, -0.0], [0.46741129197030573, -0.0], [0.46741129197030573, 0.22549019607843135], [0.47002202093123563, 0.24019607843137253], [0.47002202093123563, -0.0], [0.4726327498921655, -0.0], [0.4726327498921655, 0.25490196078431376], [0.47524347885309537, 0.2696078431372549], [0.47524347885309537, -0.0], [0.47785420781402527, -0.0], [0.47785420781402527, 0.2843137254901961], [0.4804649367749551, 0.29901960784313725], [0.4804649367749551, -0.0], [0.483075665735885, -0.0], [0.483075665735885, 0.3137254901960784], [0.48568639469681485, 0.3284313725490196], [0.48568639469681485, -0.0], [0.48829712365774475, -0.0], [0.48829712365774475, 0.3431372549019608], [0.4909078526186746, 0.35784313725490197], [0.4909078526186746, -0.0], [0.4935185815796045, -0.0], [0.4935185815796045, 0.4666666666666667], [0.4961293105405344, 0.4666666666666667], [0.4961293105405344, -0.0], [0.4987400395014642, -0.0], [0.4987400395014642, 0.4666666666666667], [0.5013507684623941, 0.4666666666666667], [0.5013507684623941, -0.0], [0.503961497423324, -0.0], [0.503961497423324, 0.4666666666666667], [0.5065722263842538, 0.35784313725490197], [0.5065722263842538, -0.0], [0.5091829553451838, -0.0], [0.5091829553451838, 0.3431372549019608], [0.5117936843061136, 0.3284313725490196], [0.5117936843061136, -0.0], [0.5144044132670434, -0.0], [0.5144044132670434, 0.3137254901960784], [0.5170151422279734, 0.29901960784313725], [0.5170151422279734, -0.0], [0.5196258711889032, -0.0], [0.5196258711889032, 0.2843137254901961], [0.5222366001498331, 0.2696078431372549], [0.5222366001498331, -0.0], [0.5248473291107629, -0.0], [0.5248473291107629, 0.25490196078431376], [0.5274580580716929, 0.24019607843137253], [0.5274580580716929, -0.0], [0.5300687870326227, -0.0], [0.5300687870326227, 0.22549019607843135], [0.5326795159935526, 0.21078431372549017], [0.5326795159935526, -0.0], [0.5352902449544824, -0.0], [0.5352902449544824, 0.196078431372549], [0.5379009739154124, 0.18137254901960784], [0.5379009739154124, -0.0], [0.5405117028763422, -0.0], [0.5405117028763422, 0.16666666666666666]]]
points=[64, 368, 368, 64]
// Point of entry - primary function that is run to set up support variables
function main ()
{
    init();
}